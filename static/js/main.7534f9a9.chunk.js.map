{"version":3,"sources":["components/Item/index.tsx","config/data.ts","App.tsx","config/keys.ts","reportWebVitals.ts","index.tsx"],"names":["Item","props","isCrypto","item","type","data","cryptoList","find","it","symbol","b3List","getCurrPrice","result","parseFloat","last","price","getBillTotal","amount","getCurrTotal","money","val","toLocaleString","style","currency","className","label","getProfit","moment","updated_at","format","getUpdateTime","ITENS","App","cryptoInterval","useRef","b3Interval","useState","cryptoData","setCryptoData","b3Data","setB3Data","useEffect","current","setInterval","loadCrypto","loadB3","clearInterval","a","cryptos","filter","reduce","res","map","indexOf","Promise","all","axios","get","then","ticker","b3s","results","index","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7534f9a9.chunk.js","sourcesContent":["import moment from 'moment';\nimport React, { FC } from 'react';\n\nimport './style.css';\n\ninterface ItemProps {\n  item: any;\n  cryptoList: any[];\n  b3List: any[];\n}\n\nconst Item: FC<ItemProps> = props => {\n\n  const isCrypto = props.item.type === 'crypto';\n\n  const data = isCrypto ?\n    props.cryptoList.find(it => it.symbol === props.item.symbol) :\n    props.b3List.find(it => it.symbol === props.item.symbol);\n\n  const getCurrPrice = () => {\n    let result = 0;\n    if (data) {\n      result = isCrypto ? parseFloat(data.data.last) : data.price;\n    }\n    return result;\n  };\n\n  const getBillTotal = () => {\n    let result = 0;\n    if (data) {\n      result = props.item.price * props.item.amount;\n    }\n    return result;\n  };\n\n  const getCurrTotal = () => {\n    let result = 0;\n    if (data) {\n      result = getCurrPrice() * props.item.amount;\n    }\n    return result;\n  };\n\n  const getProfit = () => {\n    let result = 0;\n    if (data) {\n      result = getCurrTotal() - getBillTotal();\n    }\n    return result;\n  };\n\n  const getUpdateTime = () => {\n    let result = '00:00 00/00/0000';\n    if (data) {\n      result = moment(data.updated_at).format('HH:mm DD/MM/YYYY');\n    }\n    return result;\n  };\n\n  const money = (val: number) => val.toLocaleString('pt-BR', { style: 'currency', currency: 'BRL' });\n\n  return (\n    <li className=\"item\">\n      <span className=\"title\">{props.item.label}</span>\n      <span className=\"type\">{isCrypto ? 'CripoMoeda' : 'Ação'}</span>\n      <div className=\"info\">\n        <span className=\"quantidade\">\n          <label>Quantidade</label>\n          <span>{props.item.amount}</span>\n        </span>\n        <span className=\"bill-price\">\n          <label>Valor de compra</label>\n          <span>{money(props.item.price)}</span>\n        </span>\n        <span className=\"curr-price\">\n          <label>Valor atual</label>\n          <span>{money(getCurrPrice())}</span>\n        </span>\n        <span className=\"bill-total\">\n          <label>Total da compra</label>\n          <span>{money(getBillTotal())}</span>\n        </span>\n        <span className=\"curr-total\">\n          <label>Total atual</label>\n          <span>{money(getCurrTotal())}</span>\n        </span>\n        <span className=\"profit\">\n          <label>Lucro</label>\n          <span>{money(getProfit())}</span>\n        </span>\n      </div>\n      <span className=\"update-time\">Atualizado às {getUpdateTime()}</span>\n    </li>\n  );\n};\n\nexport default Item;\n","export const ITENS = [\n  {\n    type: 'crypto',\n    label: 'Bitcoin',\n    symbol: 'BTC',\n    price: 272250,\n    amount: 0.00035,\n  },\n  {\n    type: 'crypto',\n    label: 'Litecoin',\n    symbol: 'LTC',\n    price: 1010,\n    amount: 0.13216,\n  },\n  {\n    type: 'crypto',\n    label: 'XRP',\n    symbol: 'XRP',\n    price: 2.68,\n    amount: 59.775,\n  },\n  {\n    type: 'crypto',\n    label: 'Chiliz',\n    symbol: 'CHZ',\n    price: 2.9202,\n    amount: 47.77975,\n  },\n  {\n    type: 'crypto',\n    label: 'WiBX',\n    symbol: 'WBX',\n    price: 0.23,\n    amount: 385.58621,\n  },\n  {\n    type: 'b3',\n    label: 'Magazine Luiza - Rico',\n    symbol: 'MGLU3',\n    price: 22.12,\n    amount: 13,\n  },\n  {\n    type: 'b3',\n    label: 'Magazine Luiza - c6',\n    symbol: 'MGLU3',\n    price: 22.12,\n    amount: 23,\n  }\n];\n","import axios from 'axios';\nimport moment from 'moment';\nimport React, { useEffect, useRef, useState } from 'react';\nimport Item from './components/Item';\nimport { ITENS } from './config/data';\n\nimport './App.css';\nimport { HGBRASIL_KEY } from './config/keys';\n\nfunction App() {\n\n  const cryptoInterval = useRef<any>(null);\n  const b3Interval = useRef<any>(null);\n\n  const [cryptoData, setCryptoData] = useState<any[]>([]);\n  const [b3Data, setB3Data] = useState<any[]>([]);\n\n  useEffect(\n    () => {\n      cryptoInterval.current = setInterval(loadCrypto, 2 * 60 * 1000);\n      b3Interval.current = setInterval(loadB3, 10 * 60 * 1000);\n\n      loadCrypto();\n      loadB3();\n\n      return  () => {\n        clearInterval(cryptoInterval.current);\n        clearInterval(b3Interval.current);\n      };\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    []\n  );\n\n  const loadCrypto = async () => {\n    const cryptos = ITENS\n      .filter(it => it.type === 'crypto')\n      .reduce<any[]>((res, item) => res.map(it => it.symbol).indexOf(item.symbol) === -1 ? [...res, item] : res, []);\n\n    const result = await Promise.all(\n      cryptos.map(\n        it => axios\n          .get(`https://www.mercadobitcoin.net/api/${it.symbol}/ticker/`)\n          .then(res => ({ symbol: it.symbol, data: { ...res.data.ticker, updated_at: moment().format('YYYY-MM-DD HH:mm:ss') } }))\n      )\n    );\n\n    setCryptoData(result);\n  };\n\n  const loadB3 = async () => {\n    const b3s = ITENS\n      .filter(it => it.type === 'b3')\n      .reduce<any[]>((res, item) => res.map(it => it.symbol).indexOf(item.symbol) === -1 ? [...res, item] : res, []);\n\n    const result = await Promise.all(\n      b3s.map(\n        it => axios\n          .get(`https://api.hgbrasil.com/finance/stock_price?key=${HGBRASIL_KEY}&symbol=${it.symbol}&format=json-cors`)\n          .then(res => res.data.results[it.symbol])\n      )\n    );\n\n    setB3Data(result);\n  };\n\n  return (\n    <div className=\"App\">\n      <ul className=\"item-list\">\n        {ITENS.map((it, index) => <Item key={index + 1} item={it} cryptoList={cryptoData} b3List={b3Data} />)}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n","export const HGBRASIL_KEY = '';\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}